{"version":3,"sources":["actions/index.js","helper.js","apiKey.js","thunks/fetchMovies.js","containers/Nav.js","components/Card.js","thunks/addFavorite.js","thunks/deleteFavorite.js","containers/SearchBar.js","thunks/searchMovies.js","containers/MovieContainer.js","containers/Login.js","thunks/loginUser.js","thunks/createUser.js","thunks/fetchFavorites.js","components/ErrorPage.js","containers/App.js","serviceWorker.js","reducers/index.js","reducers/userReducer.js","reducers/moviesReducer.js","reducers/favoritesReducer.js","index.js"],"names":["loginUserAction","userObject","type","isLoading","bool","hasErrored","message","fetchMoviesSuccess","movies","cleanMovies","map","movie","title","backdrop_path","poster_path","overview","original_language","popularity","movie_id","id","genre_ids","release_date","vote_average","apiKey","fetchMovies","page","selectedPage","url","concat","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","response","result","wrap","_context","prev","next","fetch","sent","ok","Error","statusText","json","results","t0","stop","this","_x","apply","arguments","Nav","_Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","incrementPage","t1","pageNumber","state","nextPage","t2","setState","decrementPage","_callee2","_context2","props","navToHomePage","inherits","createClass","key","value","react_default","createElement","user","name","className","onClick","NavLink","to","logout","Component","connect","Card","_getPrototypeOf2","_len","length","args","Array","_key","toggleFavorite","_this$props","favorites","find","faveMovie","deleteFavoriteFromStore","postFavorite","_this2","favoriteClass","fave","posterPath","Link","src","alt","favorite","uid","method","headers","Content-Type","body","JSON","stringify","objectSpread","user_id","deleteFavorite","SearchBar","handleChange","e","_e$target","target","defineProperty","handleSubmit","preventDefault","searchMovies","search","resetState","onSubmit","placeholder","onChange","searchString","querySearchString","replace","sqlSearchString","searchedMovies","error","displayedMovies","match","path","src_components_Card","src_containers_SearchBar","Login","displayNewUserForm","newUser","handleNewUserSubmit","_this$state","password","email","createUser","handleServerResponse","handleLoginSubmit","_ref2","toLowerCase","loginUser","_x2","errorMessage","fetchFavorites","history","push","verifiedPassword","_this$state2","required","data","newUserToBeLoggedIn","userId","ErrorPage","App","src_containers_Nav","Switch","Route","exact","component","MovieContainer","withRouter","Boolean","window","location","hostname","rootReducer","combineReducers","undefined","action","toConsumableArray","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","router","es","BrowserRouter","src_containers_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c13a5e9.chunk.js","sourcesContent":["export const loginUserAction = (userObject) => {\n\treturn {\n\t\ttype: 'LOGIN_USER',\n\t\tuserObject\n\t}\n}\n\nexport const logout = () => {\n\treturn {\n\t\ttype: 'LOGOUT_USER'\n\t}\n}\n\nexport const addFavorite = (favorite) => {\n\treturn {\n\t\ttype: 'ADD_FAVORITE',\n\t\tfavorite\n\t}\n}\n\nexport const deleteFavoriteFromStore = (favorite) => {\n\treturn {\n\t\ttype: 'REMOVE_FAVORITE',\n\t\tfavorite\n\t}\n}\n\nexport const addFavorites = (favorites) => {\n\treturn {\n\t\ttype: 'ADD_FAVORITES',\n\t\tfavorites\n\t}\n}\n\nexport const isLoading = (bool) => {\n\treturn {\n\t\ttype: 'IS_LOADING',\n\t\tisLoading: bool\n\t}\n}\n\nexport const hasErrored = (message) => ({\n\ttype: 'HAS_ERRORED',\n\tmessage\n})\n\nexport const fetchMoviesSuccess = (movies) => {\n\treturn {\n\t\ttype: 'FETCH_MOVIES_SUCCESS',\n\t\tmovies\n\t}\n}\n\nexport const searchMovieSuccess = (movies) => {\n\treturn {\n\t\ttype: 'SEARCH_MOVIES_SUCCESS',\n\t\tmovies\n\t}\n}\n\n","export const cleanMovies = (movies) => {\n\treturn movies.map(movie => {\n\t\tconst { title, backdrop_path, poster_path, overview, \n\t\t\toriginal_language, popularity, id, genre_ids, \n\t\t\trelease_date, vote_average} = movie\n\t\treturn ({\n\t\t\tmovie_id: id,\n\t\t\ttitle, \n\t\t\tbackdrop_path,\n\t\t\tposter_path,\n\t\t\toverview,\n\t\t\toriginal_language,\n\t\t\tpopularity,\n\t\t\tgenre_ids,\n\t\t\trelease_date,\n\t\t\tvote_average\n\t\t})\n\t})\n}\n\nexport const sqlSearchString = (searchString) => {\n  return searchString.replace(' ', '%20')\n}","const apiKey = '54bf3c231b54b82591554916467249d8'\nexport default apiKey","import { isLoading, fetchMoviesSuccess, hasErrored } from '../actions'\nimport { cleanMovies } from '../helper';\nimport apiKey from '../apiKey'\n\nexport const fetchMovies = (page) => {\n  let selectedPage = page || 1;\n  let url = `https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=true&page=${selectedPage}`\n   return async (dispatch) =>  {\n    try {\n      dispatch(isLoading(true))\n      const response = await fetch(url)\n      if (!response.ok) {\n        throw Error(response.statusText)\n      }\n      dispatch(isLoading(false))\n      const result = await response.json()\n      const movies = cleanMovies(result.results)\n      dispatch(fetchMoviesSuccess(movies))\n    } catch (err) {\n      dispatch(hasErrored(err.message))\n    }\n  }\n}","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { logout } from '../actions';\nimport { fetchMovies } from '../thunks/fetchMovies';\nimport PropTypes from 'prop-types';\nimport './Nav.scss';\n\nexport class Nav extends Component {\n  constructor() {\n    super()\n    this.state = {\n      pageNumber: 1\n    }\n  }\n  \n  incrementPage = async () => {\n    this.setState({pageNumber: (this.state.pageNumber = this.state.pageNumber + 1)}, await this.nextPage());\n  }\n\n  decrementPage = async () => {\n    if (this.state.pageNumber > 1) {\n      this.setState({pageNumber: (this.state.pageNumber = this.state.pageNumber - 1)}, await this.nextPage())\n    }\n  }\n\n  nextPage = () => {\n    this.props.fetchMovies(this.state.pageNumber);\n  }\n\n  navToHomePage = () => {\n    this.props.fetchMovies();\n  }\n\n  render() {\n    return (\n      <header>\n        <h4> \n          {this.props.user.name ? `Welcome Back ${this.props.user.name}!` : null}\n        </h4>\n        <button className=\"nav-btn\"\n          onClick={this.decrementPage}><i className=\"fas fa-angle-left\"></i> Previous Page</button>\n        <NavLink to='/favorites'><button>My Favorites</button></NavLink>\n        <NavLink to='/' onClick={this.navToHomePage}>\n          <h1 className=\"logo\">Movie <i className=\"fas fa-film\"></i> Tracker</h1>\n        </NavLink>\n        { this.props.user.name ? <NavLink to='/'><button onClick={this.props.logout}>Sign Out</button></NavLink> : <NavLink to='/login'><button>Sign In</button></NavLink> }\n        <button className=\"nav-btn\" onClick={this.incrementPage}>Next Page <i className=\"fas fa-angle-right\"></i></button>\n      </header>\n    )\n  }\n}\n\nNav.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    email: PropTypes.string,\n    password: PropTypes.string\n  }),\n  logout: PropTypes.func.isRequired,\n  fetchMovies: PropTypes.func.isRequired\n}\n\nexport const mapStateToProps = (state) => ({\n  user: state.user\n})\n\nexport const mapDispatchToProps = (dispatch) => ({\n  logout: () => dispatch(logout()),\n  fetchMovies: (page) => dispatch(fetchMovies(page))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);\n","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport { deleteFavorite } from '../thunks/deleteFavorite'\nimport { postFavorite } from '../thunks/addFavorite'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport './Card.scss'\n\nexport class Card extends Component {\n  toggleFavorite = () => {\n    const {movie, user, favorites} = this.props\n    const matchingFavorite = favorites.find(faveMovie => {\n      return faveMovie.movie_id === movie.movie_id\n    })\n    if(!matchingFavorite) {\n      this.props.postFavorite(movie, user.id)\n    } else {\n      this.props.deleteFavoriteFromStore(movie, user.id)\n    }\n  }\n  \n  render() {\n    const faves = this.props.favorites.find(fave => {\n      return fave.movie_id === this.props.movie.movie_id\n    })\n    let favoriteClass = faves ? 'favorite-movie favorite-btn' : 'favorite-btn'\n    const posterPath = `https://image.tmdb.org/t/p/w500/${this.props.movie.poster_path}`\n\n    return (\n      <div className=\"movie-card\">\n        {this.props.user.name ? <button className={favoriteClass} onClick={this.toggleFavorite}>Favorite</button> : <Link to='/login'><button className={favoriteClass}>Favorite</button></Link>}\n        <article className=\"card-text\">\n          <h1 className=\"movie-title\">{this.props.movie.title}</h1>\n          <p> {this.props.movie.overview} </p>\n        </article>\n        <article className='poster'>\n          <img src={posterPath} alt={this.props.movie.title} />\n        </article>\n      </div>\n    )\n  }\n}\n\nCard.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    email: PropTypes.string,\n    password: PropTypes.string\n  }),\n  favorites: PropTypes.arrayOf(PropTypes.object),\n  postFavorite: PropTypes.func.isRequired,\n  deleteFavoriteFromStore: PropTypes.func.isRequired\n}\n\nexport const mapStateToProps = (state) => ({\n  user: state.user,\n  favorites: state.favorites\n})\n\nexport const mapDispatchToProps = (dispatch) => ({\n  postFavorite: (favorite, uid) => dispatch(postFavorite(favorite, uid)),\n  deleteFavoriteFromStore: (movie, uid) => dispatch(deleteFavorite(movie, uid))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card)\n","import { addFavorite, hasErrored } from '../actions';\n\nexport const postFavorite = (movie, uid) => {\n  const url = 'http://localhost:3000/api/users/favorites/new';\n  return async (dispatch) => {\n    try {\n      const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({...movie, user_id: uid})\n    })\n    if (!response.ok) {\n      throw Error(response.statusText)\n    }\n    dispatch(addFavorite(movie));\n  } catch (err) {\n    dispatch(hasErrored(err.message))\n    }\n  }\n}","import { deleteFavoriteFromStore, hasErrored } from '../actions';\n\nexport const deleteFavorite =  (movie, uid) => {\n  const url = `http://localhost:3000/api/users/${uid}/favorites/${movie.movie_id}`;\n  return async (dispatch) => {\n    try {\n      const response = await fetch(url, {\n        method: 'DELETE'\n      })\n      if (!response.ok) {\n        throw Error(response.statusText)\n      }\n      dispatch(deleteFavoriteFromStore(movie))\n    } catch(err) {\n      dispatch(hasErrored(err.message))\n    }\n  }\n}","import React, { Component } from 'react';\nimport './SearchBar.scss';\nimport { searchMovies } from '../thunks/searchMovies';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n\nexport class SearchBar extends Component {\n  constructor() {\n    super()\n    this.state = {\n      search: ''\n    }\n  }\n\n  handleChange = (e) => {\n    const {name, value} = e.target\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault()\n    this.props.searchMovies(this.state.search)\n    this.resetState()\n  }\n\n  resetState = () => {\n    this.setState({search: ''})\n  }\n\n  render() {\n    return (\n      <div className=\"search-bar-div\">\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Search the Database by any keyword!\"\n            name=\"search\"\n            value={this.state.search}\n            className=\"search-input\"\n            onChange={this.handleChange}\n          />\n          <button className='search-btn'>Search!</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nSearchBar.propTypes = {\n  searchMovies: PropTypes.func.isRequired\n}\n\nexport const mapDispatchToProps = (dispatch) => ({\n  searchMovies: (search) => dispatch(searchMovies(search))\n})\n\nexport default connect(null, mapDispatchToProps)(SearchBar);","import { isLoading, searchMovieSuccess, hasErrored } from '../actions'\nimport { cleanMovies, sqlSearchString } from '../helper'\nimport apiKey from '../apiKey'\n\n\nexport const searchMovies = (searchString) => {\n  const querySearchString = sqlSearchString(searchString)\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${querySearchString}`\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading(true))\n      const response = await fetch(url)\n      if (!response.ok) {\n        throw Error(response.statusText)\n      }\n      dispatch(isLoading(false))\n      const result = await response.json()\n      const searchedMovies = cleanMovies(result.results)\n      dispatch(searchMovieSuccess(searchedMovies))\n    } catch (err) {\n      dispatch(hasErrored(err.message))\n    }\n  }  \n}","import React from 'react'\nimport Card from '../components/Card'\nimport { connect } from 'react-redux'\nimport './MovieContainer.scss'\nimport SearchBar from './SearchBar'\nimport PropTypes from 'prop-types'\n\nexport const MovieContainer = (props) => {\n\tlet displayedMovies\n\tif (props.match.path === '/favorites') {\n\t\tdisplayedMovies = props.favorites\n\t} else {\n\t\tdisplayedMovies = props.movies\n\t}\n\tconst movies = displayedMovies.map(movie => {\n\t\treturn <Card movie={movie} key={movie.movie_id}/>\n\t})\n\n\tif (props.isLoading) {\n\t\treturn (\n\t\t\t<div className=\"loading\">\n        LOADING...\n\t\t\t</div>\n\t\t)\n\t} else {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<SearchBar />\n\t\t\t\t<div className={displayedMovies.length === 0 ? 'hidden' : 'movie-container'}>\n\t\t\t\t\t{ movies }\n\t\t\t\t</div>\n\t\t\t\t<h1 className={displayedMovies.length === 0 && props.match.path === '/favorites' ? 'no-movies movie-container' : 'hidden'}>\n          You have no favorited movies silly!\n\t\t\t\t</h1>\n\t\t\t\t<h1 className={displayedMovies.length === 0 && props.match.path === '/' ? 'no-movies movie-container' : 'hidden'}>\n          No movies matched your search query.\n\t\t\t\t</h1>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nMovieContainer.propTypes = {\n\tmovies: PropTypes.arrayOf(PropTypes.object).isRequired,\n\tfavorites: PropTypes.arrayOf(PropTypes.object),\n\tisLoading: PropTypes.bool.isRequired,\n\terror: PropTypes.string.isRequired\n}\n\nexport const mapStateToProps = (state) => ({\n\tmovies: state.movies,\n\tfavorites: state.favorites,\n\tisLoading: state.isLoading,\n\terror: state.error\n})\n\nexport default connect(mapStateToProps)(MovieContainer)","import React, { Component } from 'react';\nimport { fetchFavorites } from '../thunks/fetchFavorites';\nimport { connect } from 'react-redux';\nimport { createUser } from '../thunks/createUser';\nimport { loginUser } from '../thunks/loginUser';\nimport PropTypes from 'prop-types';\nimport './Login.scss';\n\nexport class Login extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      newUser: false,\n      errorMessage: false\n    }\n  }\n\n  displayNewUserForm = () => {\n    this.resetState()\n    this.setState({\n      newUser: true\n    })\n  }\n\n  handleChange = (e) => {\n    const {name, value} = e.target\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleNewUserSubmit = async (e) => {\n    e.preventDefault()\n    const { name, password, email } = this.state;\n    const user = {name, email, password}\n    await this.props.createUser(user)\n    await this.handleServerResponse()\n  }\n\n  handleLoginSubmit = async (e) => {\n    e.preventDefault()\n    const email = this.state.email.toLowerCase()\n    const {password} = this.state\n    const user = {password, email}\n    await this.props.loginUser(user)\n    await this.handleServerResponse()\n  }\n\n  handleServerResponse = () => {\n    if (this.props.error) {\n      this.setState({errorMessage: true})\n    } else {\n      this.props.fetchFavorites(this.props.user.id);\n      this.resetState();\n      this.props.history.push('/');\n    }\n  }\n\n  resetState = () => {\n    this.setState({\n      email: '',\n      password: '',\n      verifiedPassword: '',\n      name: ''\n    })\n  }\n\n  render() {\n    const { email, password, name } = this.state;\n    if (!this.state.newUser) {\n      return (\n        <section className=\"login-container\">\n          <h2>Welcome back!</h2>\n          <div className={this.state.errorMessage ? 'show-error' : 'hide-error'}>E-Mail and Password do not match</div>\n          <form onSubmit={this.handleLoginSubmit} className=\"login-form\">\n            <input\n              type=\"email\"\n              placeholder=\"E-Mail\"\n              value={email}\n              name=\"email\"\n              onChange={this.handleChange}\n              required\n            />\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              name=\"password\"\n              onChange={this.handleChange}\n              required\n            />\n            <button className=\"login-submit-btn\">Submit</button>\n          </form>\n          <div className=\"signup-prompt\">\n            <label>Or are you new to Movie Tracker?</label>\n            <button onClick={this.displayNewUserForm}>Sign Up!</button>\n          </div>\n        </section>\n      )\n    } else {\n      return (\n        <section className=\"login-container\">\n          <h2>Get ready to become a professional TRACKER!</h2>\n          <div className={this.state.errorMessage ? 'show-error' : 'hide-error'}>E-Mail already exists</div>\n          <form onSubmit={this.handleNewUserSubmit} className=\"login-form\">\n            <input\n              type=\"text\"\n              placeholder=\"Name\"\n              value={name}\n              name=\"name\"\n              onChange={this.handleChange}\n              required\n            />\n            <input\n              type=\"email\"\n              placeholder=\"E-Mail\"\n              value={email}\n              name=\"email\"\n              onChange={this.handleChange}\n              required\n            />\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              name=\"password\"\n              onChange={this.handleChange}\n              required\n            />\n            <button className=\"login-submit-btn\">Submit</button>\n          </form>\n        </section>\n      )\n    }\n  }\n}\n\nLogin.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    email: PropTypes.string,\n    password: PropTypes.string\n  }),\n  error: PropTypes.string.isRequired,\n  loginUser: PropTypes.func.isRequired,\n  createUser: PropTypes.func.isRequired,\n  fetchFavorites: PropTypes.func.isRequired\n}\n\nexport const mapStateToProps = (state) => ({\n  user: state.user,\n  error: state.error\n})\n\nexport const mapDispatchToProps = (dispatch) => ({\n  loginUser: (user) => dispatch(loginUser(user)),\n  createUser: (user) => dispatch(createUser(user)),\n  fetchFavorites: (uid) => dispatch(fetchFavorites(uid)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import { isLoading, hasErrored, loginUserAction } from '../actions'\n\nexport const loginUser = (user) => {\n  const url = 'http://localhost:3000/api/users/';\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading(true))\n      const response = await fetch(url, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(user)\n        })\n      if (!response.ok) {\n        throw Error(response.statusText)\n      }\n      dispatch(isLoading(false))\n      const result = await response.json()\n      dispatch(loginUserAction(result.data))\n      dispatch(hasErrored(''))\n    } catch(err) {\n      dispatch(hasErrored(err.message));\n    }\n  }\n}","import { isLoading, hasErrored, loginUserAction } from '../actions'\n\nexport const createUser = (user) => {\n  const url = 'http://localhost:3000/api/users/new'\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading(true))\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n      })\n      if (!response.ok) {\n        throw Error(response.statusText)\n      }\n      dispatch(isLoading(false))\n      const newUser = await response.json();\n      const newUserToBeLoggedIn = {\n        id: newUser.id,\n        email: user.email,\n        password: user.password,\n        name: user.name\n      }\n      dispatch(loginUserAction(newUserToBeLoggedIn))\n      dispatch(hasErrored(''))\n    } catch(err) {\n      dispatch(hasErrored(err.message))\n    }\n  }\n}","import { isLoading, addFavorites, hasErrored } from '../actions';\n\nexport const fetchFavorites = (userId) => {\n  const url = `http://localhost:3000/api/users/${userId}/favorites`;\n  return async (dispatch) => {\n    try {\n    dispatch(isLoading(true))\n    const response = await fetch(url)\n    if (!response.ok) {\n      throw Error(response.statusText)\n    }\n    dispatch(isLoading(false))\n    const result = await response.json()\n    const movies = result.data\n    dispatch(addFavorites(movies));\n  } catch(err) {\n    dispatch(hasErrored(err.message))\n    }\n  }\n}","import React from 'react'\nimport '../containers/MovieContainer.scss'\n\nconst ErrorPage = () => {\n\n\treturn (\n\t\t<h1 className=\"no-movies movie-container\">\n      The page you requested cannot be found. Please check your address and try again.\n\t\t</h1>\n\t)\n}\n\nexport default ErrorPage","import React, { Component } from 'react';\nimport './App.css';\nimport Nav from './Nav';\nimport MovieContainer from './MovieContainer';\nimport Login from './Login';\nimport { Route, Switch, withRouter } from 'react-router-dom'\nimport { fetchMovies } from '../thunks/fetchMovies'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport ErrorPage from '../components/ErrorPage';\n\n\nclass App extends Component {\n  async componentDidMount() {\n    await this.props.fetchMovies()\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route exact path='/' component={ MovieContainer } />\n          <Route path='/login' component={ Login } />\n          <Route path='/favorites' component={ MovieContainer } />\n          <Route component={ ErrorPage } />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  movies: PropTypes.array.isRequired,\n  error: PropTypes.string.isRequired,\n  fetchMovies: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  isLoading: state.isLoading,\n  movies: state.movies,\n  error: state.error\n})\n\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchMovies: () => dispatch(fetchMovies())\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App))\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n    \t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.')\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error)\n\t\t})\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type')\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload()\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t)\n\t\t})\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister()\n\t\t})\n\t}\n}\n","import { combineReducers } from 'redux'\nimport { userReducer } from './userReducer'\nimport { isLoading, hasErrored, moviesReducer } from './moviesReducer'\nimport { favoritesReducer } from './favoritesReducer'\n\n\nconst rootReducer = combineReducers(\n\t{\n\t\tuser: userReducer,\n\t\tmovies: moviesReducer,\n\t\tfavorites: favoritesReducer,\n\t\tisLoading: isLoading,\n\t\terror: hasErrored\n\t}\n)\n\nexport default rootReducer","export const userReducer = (state = {}, action) => {\n\tswitch(action.type) {\n\tcase 'LOGIN_USER':\n\t\treturn action.userObject\n\tcase 'LOGOUT_USER': \n\t\treturn {}\n\tdefault:\n\t\treturn state\n\t}\n}","export const isLoading = (state = false, action) => {\n\tswitch(action.type) {\n\tcase 'IS_LOADING':\n\t\treturn action.isLoading\n\tdefault:\n\t\treturn state\n\t}\n}\n\nexport const hasErrored = (state = '', action) => {\n\tswitch(action.type) {\n\tcase 'HAS_ERRORED':\n\t\treturn action.message\n\tdefault:\n\t\treturn state\n\t}\n}\n\nexport const moviesReducer = (state = [], action) => {\n\tswitch(action.type) {\n\tcase 'FETCH_MOVIES_SUCCESS':\n\t\treturn action.movies\n\tcase 'SEARCH_MOVIES_SUCCESS':\n\t\treturn action.movies\n\tdefault:\n\t\treturn state\n\t}\n}","export const favoritesReducer = (state=[], action) => {\n\tswitch(action.type) {\n\tcase 'ADD_FAVORITE':\n\t\treturn [...state, action.favorite]\n\tcase 'ADD_FAVORITES':\n\t\treturn [...state, ...action.favorites]\n\tcase 'REMOVE_FAVORITE':\n\t\treturn state.filter(movie => movie.movie_id !== action.favorite.movie_id)\n\tcase 'LOGOUT_USER':\n\t\treturn []\n\tdefault: \n\t\treturn state\n\t}\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './containers/App'\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './reducers'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\n\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\n\nconst router = (\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>\n)\n\nReactDOM.render(router, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}